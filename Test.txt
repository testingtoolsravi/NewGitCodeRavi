{
    "bankId": {
        "value": "6fb17583-1e49-4435-bb74-a14fe0996723"
    },
    "accountId": {
        "value": "36C89433-694A-4651-ACC3-0001E5E4E961"
    },
    "productType": "saving",
    "accountNickName": "string",
    "initialBalance": 123.321,
    "givenName": "TAB",
    "surname": "BANK",
    "customerId": "480BA94E-455B-42E1-8801-000101ECF90C",
    "productCode": "240-OP",
    "branchId": "3FADEC89-1220-43D3-90A5-00004C6165ED",
    "accountRoutingScheme": "IBAN",
    "accountRoutingAddress": "DE91 1000 0000"
    }
******************************************
{
    "national_identifier": "UK97ZZZ1234567890",
    "full_name": "uk",
    "swift_bic": "IIIGGB22",
    "logo_url": "https://static.openbankproject.com/images/sandbox/bank_x.png",
    "id": "510BA94E-455B-42E1-8801-000101ECF90E",
    "short_name": "uk",
    "bank_routing": {
        "scheme": "Bank_ID",
        "address": "gh.29.uk"
    },
    "website_url": "https://www.example.com"
}
**************************************************
{
	"TC_0001": {
		"testdata1": {
			"Status Code": "201",
			"Status Line": "201 Created"
		}
	},
	"TC_0002": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "1234567891",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12345678@#$%^&*",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0003": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "1234567891",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12345678@#$%^&*",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0004": {
		"testdata1": {
			"value": "",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0005": {
		"testdata1": {
			"value": "",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0006": {
		"testdata1": {
			"value": "",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0007": {
		"testdata1": {
			"value": "",
			"Status Code": "201",
			"Status Line": "201 Created"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0008": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "1234567891",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "123456789@#$%^&*(&*(#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0009": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "1234567891",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "123456789@#$%^&*(&*(#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0010": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "123456789112345678912",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12345646$%$^$%%453",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0011": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabhay",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12351#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0012": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcde",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "#$#$#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0013": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcd",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "#$#$$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0014": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcd",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "#$#$$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0015": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefabcdefabcdefabcdefabcdefabcdef",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12351#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0016": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefabcdef",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12351#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0017": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefabcdefabcdefabcdefabcdefabcdef",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12351#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0018": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefabcdefabcdefabcdefabcdefabc",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12351#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0019": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcd123abcd123abcd123",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "12351#$#",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	}
}
**********************************************************
{
	"TC_0001": {
		"testdata1": { 
			"Status Code": "201",
			"Status Line": "201 Created"
		}
	},
	"TC_0003": {
		"testdata1": {
			"value": "",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0004": {
		"testdata1": {
			"value": "",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0005": {
		"testdata1": {
			"value": "",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata2": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		},
		"testdata3": {
			"value": "a4ca9e72-7271-11ea-bc55-0242ac130003s",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0006": {
		"testdata1": {
			"value": "123456789",
			"Status Code": "401",
			"Status Line": "401 Unauthorized"
		}
	},
	"TC_0007": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "123456789123456789123456789123scmkjcnhdmkokmjifhdh1",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0008": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "123456789123456789123456789123scmkjcnhdmkokmjifhdh1",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0009": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh11",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0010": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "1234567891",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh11",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0011": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefghijklmonpqestuvaxyzabhcdefghy",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0012": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "abcdefghijklmonpqestuvaxyzabhcd",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0013": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh11",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0014": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "123456789123456789123",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	},
	"TC_0015": {
		"testdata1": {
			"value": "",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata2": {
			"value": "1234567891",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		},
		"testdata3": {
			"value": "123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhdh1123456789123456789123456789123scmkjcnhdmkokmjifhd",
			"Status Code": "400",
			"Status Line": "400 Bad Request"
		}
	}
}

******************************************************
client_secret=d6F69Ac802E1465Fb6Efc21c255f8d64
client_id=f2a7d0f86ee740ad8b9b688cf135f1c4
X-Correlation-ID=uuid
sessionId=uuid
**********************************************
client_secret=d6F69Ac802E1465Fb6Efc21c255f8d64
client_id=f2a7d0f86ee740ad8b9b688cf135f1c4
X-Correlation-ID=uuid
sessionId=uuid
***********************************************
{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "title": "The Root Schema",
    "description": "The root schema comprises the entire JSON document.",
    "required": [
        "bankId",
        "accountId",
        "productType",
        "accountNickName",
        "initialBalance",
        "givenName",
        "surname",
        "customerId",
        "productCode",
        "branchId",
        "accountRoutingScheme",
        "accountRoutingAddress"
    ],
    "properties": {
        "bankId": {
            "$id": "#/properties/bankId",
            "type": "object",
            "title": "The Bankid Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": {},
            "examples": [
                {
                    "value": "3FADEC89-1220-43D3-90A5-00004C6165ED"
                }
            ],
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "$id": "#/properties/bankId/properties/value",
                    "type": "string",
                    "title": "The Value Schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": "",
                    "examples": [
                        "3FADEC89-1220-43D3-90A5-00004C6165ED"
                    ]
                }
            }
        },
        "accountId": {
            "$id": "#/properties/accountId",
            "type": "object",
            "title": "The Accountid Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": {},
            "examples": [
                {
                    "value": "3FADEC89-1220-43D3-90A5-00004C6165ED"
                }
            ],
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "$id": "#/properties/accountId/properties/value",
                    "type": "string",
                    "title": "The Value Schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": "",
                    "examples": [
                        "3FADEC89-1220-43D3-90A5-00004C6165ED"
                    ]
                }
            }
        },
        "productType": {
            "$id": "#/properties/productType",
            "type": "string",
            "title": "The Producttype Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "saving"
            ]
        },
        "accountNickName": {
            "$id": "#/properties/accountNickName",
            "type": "string",
            "title": "The Accountnickname Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "string"
            ]
        },
        "initialBalance": {
            "$id": "#/properties/initialBalance",
            "type": "number",
            "title": "The Initialbalance Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": 0,
            "examples": [
                123.321
            ]
        },
        "givenName": {
            "$id": "#/properties/givenName",
            "type": "string",
            "title": "The Givenname Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "TAB"
            ]
        },
        "surname": {
            "$id": "#/properties/surname",
            "type": "string",
            "title": "The Surname Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "BANK"
            ]
        },
        "customerId": {
            "$id": "#/properties/customerId",
            "type": "string",
            "title": "The Customerid Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "3FADEC89-1220-43D3-90A5-00004C6165ED"
            ]
        },
        "productCode": {
            "$id": "#/properties/productCode",
            "type": "string",
            "title": "The Productcode Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "240-OP"
            ]
        },
        "branchId": {
            "$id": "#/properties/branchId",
            "type": "string",
            "title": "The Branchid Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "3FADEC89-1220-43D3-90A5-00004C6165ED"
            ]
        },
        "accountRoutingScheme": {
            "$id": "#/properties/accountRoutingScheme",
            "type": "string",
            "title": "The Accountroutingscheme Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "IBAN"
            ]
        },
        "accountRoutingAddress": {
            "$id": "#/properties/accountRoutingAddress",
            "type": "string",
            "title": "The Accountroutingaddress Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "DE91 1000 0000"
            ]
        }
    }
}
*********************************************
{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "title": "The Root Schema",
    "description": "The root schema comprises the entire JSON document.",
    "required": [
        "national_identifier",
        "full_name",
        "swift_bic",
        "logo_url",
        "id",
        "short_name",
        "bank_routing",
        "website_url"
    ],
    "properties": {
        "national_identifier": {
            "$id": "#/properties/national_identifier",
            "type": "string",
            "title": "The National_identifier Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "UK97ZZZ1234567890"
            ]
        },
        "full_name": {
            "$id": "#/properties/full_name",
            "type": "string",
            "title": "The Full_name Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "uk"
            ]
        },
        "swift_bic": {
            "$id": "#/properties/swift_bic",
            "type": "string",
            "title": "The Swift_bic Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "IIIGGB22"
            ]
        },
        "logo_url": {
            "$id": "#/properties/logo_url",
            "type": "string",
            "title": "The Logo_url Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "https://static.openbankproject.com/images/sandbox/bank_x.png"
            ]
        },
        "id": {
            "$id": "#/properties/id",
            "type": "string",
            "title": "The Id Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "510BA94E-455B-42E1-8801-000101ECF90E"
            ]
        },
        "short_name": {
            "$id": "#/properties/short_name",
            "type": "string",
            "title": "The Short_name Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "uk"
            ]
        },
        "bank_routing": {
            "$id": "#/properties/bank_routing",
            "type": "object",
            "title": "The Bank_routing Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": {},
            "examples": [
                {
                    "scheme": "Bank_ID",
                    "address": "gh.29.uk"
                }
            ],
            "required": [
                "scheme",
                "address"
            ],
            "properties": {
                "scheme": {
                    "$id": "#/properties/bank_routing/properties/scheme",
                    "type": "string",
                    "title": "The Scheme Schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": "",
                    "examples": [
                        "Bank_ID"
                    ]
                },
                "address": {
                    "$id": "#/properties/bank_routing/properties/address",
                    "type": "string",
                    "title": "The Address Schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": "",
                    "examples": [
                        "gh.29.uk"
                    ]
                }
            }
        },
        "website_url": {
            "$id": "#/properties/website_url",
            "type": "string",
            "title": "The Website_url Schema",
            "description": "An explanation about the purpose of this instance.",
            "default": "",
            "examples": [
                "https://www.example.com"
            ]
        }
    }
}
************************************************
baseURI=https://mulefabricint.tab.com/openbanking-experience-api/v1/


BANK_ID=6fb17583-1e49-4435-bb74-a14fe0996723
Card_ID=873359F6-96BC-4DDF-A4E6-00148577BA4F
USER_ID=D9E5041C-0EEF-453F-9AFE-0001481FC686
ACCOUNT_ID=8E5A7E5D-F51F-46DE-8241-90A046E0D292
VIEW_ID=3FADEC89-1220-43D3-90A5-00004C616678
ACCOUNT_ID_2=3FADEC89-1220-43D3-90A5-00004C6165ED 
CUSTOMER_ID=C9D5C2D8-FDF5-42A3-AF5B-0003338D1077
KYC_DOCUMENT_ID=BE5F49D6-ECA3-46FD-B4FB-9FA55CFB473C

#create Customer
create.customer=banks/{BANK_ID}/customers
create.customer.BANK_ID=6fb17583-1e49-4435-bb74-a14fe0996723

#create Bank
create.bank=banks

#getUserByID
getuserby.user_id=banks/{BANK_ID}/users/user_id/{USER_ID}
getuserby.user_id.USER_ID=D9E5041C-0EEF-453F-9AFE-0001481FC686
getuserby.user_id.BANK_ID=6fb17583-1e49-4435-bb74-a14fe0996723

******************************************
{
	"chrome": {
		"arguments": {
			"arg1": "--disable-infobars",
			"arg2": "--start-maximized",
			"arg3": "--ignore-certificate-errors" ,
			"arg4":"--window-size=1920,1080"

			 
		},
		"capabilities": {
			"browserName": "chrome",
			"os":"Windows"
			
		}
		
	},
	"firefox": {
		"arguments": {
			 
		},
		"capabilities": {
			"browserName": "firefox",
			"os":"Windows",
			"binary":"C:\\Users\\achaudhary\\AppData\\Local\\Mozilla Firefox\\firefox.exe"
			
		}
	},
	"ie": {
		"arguments": {
			 
		},
		"capabilities": {
			"browserName": "internet explorer",
			"os":"Windows"
			
		}
	}


}
***************************************************
#run.type=local
#run.type=grid
run.type=api

#System
application.name=Tab automation


#Reporting
extent.report=true
report.directory.windows=\\reports\\
report.file.name=extent-report.html
date.format=MM-dd-yyyy_HH-mm-ss
report.directory.environment.separator=-
screenshot.passed.step=true
screenshot.failed.step=true

#INT DB 
onboarding.int.db=jdbc:sqlserver://ogvsqlcoreint01\\int.onboarding:1433;user=jdbcuser; password=99*-Jdbc
cego.int.db=jdbc:sqlserver://ogvsqlcoreint01\\Customer360_schema:1433;user=apiuser; password=99*-api

#Browser Binary versions
grid.port.number=2426
chrome.binary.version=79.0.3945
firefox.binary.version=v0.24.0
ie.binary.version=3.14.0
firefox.binary.path=C:\\Users\\achaudhary\\AppData\\Local\\Mozilla Firefox\\firefox.exe

#Timeouts
page.load.wait=60
explicit.wait.timeout=60
fluent.wait.timeout=60 
polling.interval=500
file.Download.Timeout=15000

# Selenium Events 
Selenium.Event.log=false
isEmailReport=false
 
#Application URLS
# acpt,int
#Onboarding
onboarding.env=int
onboarding.int.url=https://onboardingint.tabbank.com/app/#!
onboarding.acpt.url=https://achaudhary:Okok@123@onboardingacpt.tabbank.com/app/#!
onboarding.user.name=admin
onboarding.user.password=abc123
onboarding.admin.user.name=rvennam
onboarding.admin.user.password=abc123

#equipment financing
equipment.financing.int.url=https://equipment-financing.int.tabbank.com/

#EBank
ebank.int.url=https://ebankint.tabbank.com/app/#!
ebank.admin.user=auto01
ebank.admin.password=abc123

#EPrecision
eprecision.int.url=https://eprecision.int.tabbank.com/

#Daint
daint.int.url=https://daint.tabbank.com/

#task Group to Assign
onboarding.int.bankgroup=OLD_TAB Bank
onboarding.acpt.bankgroup=TAB Bank

#EDGe
edge.int.url= http://rmaddula:*YPh9u8i@edgeint.tabbank.com:8080/app/#!
edge.user.login=admin
edge.user.loginpassword=abc123
*********************************************
# Root logger option
log4j.rootLogger=INFO, file, stdout
# configuration to print into file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=./src/test/resources/logs/Steplogs.log
log4j.appender.LOGFILE.RollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.LOGFILE.RollingPolicy.FileNamePattern=/logs/Steplog_%d{yyyy-MM-dd}.log
log4j.appender.file.MaxFileSize=12MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
# configuration to print on console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
***********************************
var getShadowElement = function getShadowElement(object,selector) {
	return object.shadowRoot.querySelector(selector);
};

var getAllShadowElement = function getAllShadowElement(object,selector) {
	return object.shadowRoot.querySelectorAll(selector);
};

var getAttribute = function getAttribute(object,attribute) {
	return object.getAttribute(attribute);
};

var isVisible = function isVisible(object) {
	var visible = object.offsetWidth;
	if(visible>0) {
		return true;
	} else {
		return false;
	}
};

var scrollTo = function scrollTo(object) {
	object.scrollIntoView({block: "center", inline: "nearest"});
};

var getParentElement = function getParentElement(object) {
	if(object.parentNode.nodeName=="#document-fragment") {
		return object.parentNode.host;
	} else if(object.nodeName=="#document-fragment") {
		return object.host;
	} else {
		return object.parentElement;
	}
};

var getChildElements = function getChildElements(object) {
	if(object.nodeName=="#document-fragment") {
		return object.children;
	} else {
		return object.childNodes;
	}
};

var getSiblingElements = function getSiblingElements(object) {
	if(object.nodeName=="#document-fragment") {
		return object.host.children;
	} else {
		return object.siblings();
	}
};

var getSiblingElement = function getSiblingElement(object, selector) {
	if(object.nodeName=="#document-fragment") {
		return object.host.querySelector(selector);
	} else {
		return object.parentElement.querySelector(selector);
	}
};

var getNextSiblingElement = function getNextSiblingElement(object) {
	if(object.nodeName=="#document-fragment") {
		return object.host.firstElementChild.nextElementSibling;
	} else {
		return object.nextElementSibling;
	}
};

var getPreviousSiblingElement = function getPreviousSiblingElement(object) {
	if(object.nodeName=="#document-fragment") {
		return null;
	} else {
		return object.previousElementSibling;
	}
};

var isChecked = function isChecked(object) {
	return object.checked;
};

var isDisabled = function isDisabled(object) {
	return object.disabled;
};

var findCheckboxWithLabel = function findCheckboxWithLabel(label, root=document) {
	if(root.nodeName=="PAPER-CHECKBOX") {
		if(root.childNodes[0].data.trimStart().trimEnd()==label) {
			return root;
		}
	} else {
		let all_checkbox = getAllObject("paper-checkbox", root);
		for (let checkbox of all_checkbox) {
			if(checkbox.childNodes[0].data.trimStart().trimEnd()==label) {
				return checkbox;
			}
		}
	}
};

var findRadioWithLabel = function findRadioWithLabel(label, root=document) {
	if(root.nodeName=="PAPER-RADIO-BUTTON") {
		if(root.childNodes[0].data.trimStart().trimEnd()==label) {
			return root;
		}
	} else {
		let all_radio = getAllObject("paper-radio-button", root);
		for (let radio of all_radio) {
			if(radio.childNodes[0].data.trimStart().trimEnd()==label) {
				return radio;
			}
		}
	}
};

var selectCheckbox = function selectCheckbox(label, root=document) {
	let checkbox = findCheckboxWithLabel(label, root);
	if(!checkbox.checked) {
		checbox.click();
	}
};

var selectRadio = function selectRadio(label, root=document) {
	let radio = findCheckboxWithLabel(label, root);
	if(!radio.checked) {
		radio.click();
	}
};

var selectDropdown = function selectDropdown(label, root=document) {
	if(root.nodeName=="PAPER-LISTBOX") {
		root.select(label);
	} else {
		let listbox = getAllObject("paper-listbox", root);
		listbox.select(label);
	}
};

var querySelectorAllDeep = function querySelectorAllDeep(selector, root) {
	if(root==undefined) {
		return _querySelectorDeep(selector, true, document);
	} else {
		return _querySelectorDeep(selector, true, root);
	}
};

var querySelectorDeep = function querySelectorDeep(selector, root) {
	if(root==undefined) {
		return _querySelectorDeep(selector, false, document);
	} else {
		return _querySelectorDeep(selector, false, root);
	}
};

var getObject = function getObject(selector, root = document) {
    const multiLevelSelectors = splitByCharacterUnlessQuoted(selector, '>');
	if (multiLevelSelectors.length == 1) {
		return querySelectorDeep(multiLevelSelectors[0], root);
	} else if (multiLevelSelectors.length == 2) {
		return querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root);
	} else if (multiLevelSelectors.length == 3) {
		return querySelectorDeep(multiLevelSelectors[2], querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root));
	} else if (multiLevelSelectors.length == 4) {
		return querySelectorDeep(multiLevelSelectors[3], querySelectorDeep(multiLevelSelectors[2], querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root)));
	} else if (multiLevelSelectors.length == 5) {
		return querySelectorDeep(multiLevelSelectors[4], querySelectorDeep(multiLevelSelectors[3], querySelectorDeep(multiLevelSelectors[2], querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root))));
	}
};

var getAllObject = function getAllObject(selector, root = document) {
    const multiLevelSelectors = splitByCharacterUnlessQuoted(selector, '>');
    if (multiLevelSelectors.length == 1) {
        return querySelectorAllDeep(multiLevelSelectors[0], root);
    } else if (multiLevelSelectors.length == 2) {
        return querySelectorAllDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root);
    } else if (multiLevelSelectors.length == 3) {
        return querySelectorAllDeep(multiLevelSelectors[2], querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root));
    } else if (multiLevelSelectors.length == 4) {
		return querySelectorAllDeep(multiLevelSelectors[3], querySelectorDeep(multiLevelSelectors[2], querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root)));
	} else if (multiLevelSelectors.length == 5) {
		return querySelectorAllDeep(multiLevelSelectors[4], querySelectorDeep(multiLevelSelectors[3], querySelectorDeep(multiLevelSelectors[2], querySelectorDeep(multiLevelSelectors[1], querySelectorDeep(multiLevelSelectors[0]).root))));
	}
    
};

function _querySelectorDeep(selector, findMany, root) {
    let lightElement = root.querySelector(selector);

    if (document.head.createShadowRoot || document.head.attachShadow) {
        if (!findMany && lightElement) {
            return lightElement;
        }

        const selectionsToMake = splitByCharacterUnlessQuoted(selector, ',');

        return selectionsToMake.reduce((acc, minimalSelector) => {
            if (!findMany && acc) {
                return acc;
            }
            const splitSelector = splitByCharacterUnlessQuoted(minimalSelector
                    .replace(/^\s+/g, '')
                    .replace(/\s*([>+~]+)\s*/g, '$1'), ' ')
                .filter((entry) => !!entry);
            const possibleElementsIndex = splitSelector.length - 1;
            const possibleElements = collectAllElementsDeep(splitSelector[possibleElementsIndex], root);
            const findElements = findMatchingElement(splitSelector, possibleElementsIndex, root);
            if (findMany) {
                acc = acc.concat(possibleElements.filter(findElements));
                return acc;
            } else {
                acc = possibleElements.find(findElements);
                return acc;
            }
        }, findMany ? [] : null);


    } else {
        if (!findMany) {
            return lightElement;
        } else {
            return root.querySelectorAll(selector);
        }
    }

}

function findMatchingElement(splitSelector, possibleElementsIndex, root) {
    return (element) => {
        let position = possibleElementsIndex;
        let parent = element;
        let foundElement = false;
        while (parent) {
            const foundMatch = parent.matches(splitSelector[position]);
            if (foundMatch && position === 0) {
                foundElement = true;
                break;
            }
            if (foundMatch) {
                position--;
            }
            parent = findParentOrHost(parent, root);
        }
        return foundElement;
    };

}

function splitByCharacterUnlessQuoted(selector, character) {
    return selector.match(/\\?.|^$/g).reduce((p, c) => {
        if (c === '"' && !p.sQuote) {
            p.quote ^= 1;
            p.a[p.a.length - 1] += c;
        } else if (c === '\'' && !p.quote) {
            p.sQuote ^= 1;
            p.a[p.a.length - 1] += c;

        } else if (!p.quote && !p.sQuote && c === character) {
            p.a.push('');
        } else {
            p.a[p.a.length - 1] += c;
        }
        return p;
    }, { a: [''] }).a;
}


function findParentOrHost(element, root) {
    const parentNode = element.parentNode;
    return (parentNode && parentNode.host && parentNode.nodeType === 11) ? parentNode.host : parentNode === root ? null : parentNode;
}


function collectAllElementsDeep(selector = null, root) {
    const allElements = [];

    const findAllElements = function(nodes) {
        for (let i = 0, el; el = nodes[i]; ++i) {
            allElements.push(el);
            if (el.shadowRoot) {
                findAllElements(el.shadowRoot.querySelectorAll('*'));
            }
        }
    };
	
	if(root.shadowRoot != null) {
		findAllElements(root.shadowRoot.querySelectorAll('*'));
	}
	
    findAllElements(root.querySelectorAll('*'));

    return selector ? allElements.filter(el => el.matches(selector)) : allElements;
}