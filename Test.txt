@OnBoarding @Web @Regression
Feature: Onboarding

  Background: User Has Logged into OnBoarding With Valid Credentials
    Given user logged into Onboarding

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0001
  Scenario: REG_ONBRD_1225_TC_0001
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType          | CustomerType | ProductName                   |
      | Deposit     | Money Market Account | Consumer     | Consumer Money Market Account |
    And Fills the Details for the Individual Information
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0002
  Scenario: REG_ONBRD_1225_TC_0002
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType          | CustomerType | ProductName             |
      | Deposit     | Money Market Account | Commercial   | Commercial Money Market |
    And Fills the Details for the Legal Entity
      | LegalEntity     |
      | Sole Proprietor |
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete commercial Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0003
  Scenario: REG_ONBRD_1225_TC_0003
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName          |
      | Deposit     | Checking    | Consumer     | Consumer Kasasa Cash |
    And Fills the Details for the Individual Information
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0004
  Scenario: REG_ONBRD_1225_TC_0004
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName           |
      | Deposit     | Checking    | Consumer     | Consumer Kasasa Saver |
    And Fills the Details for the Individual Information
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0005
  Scenario: REG_ONBRD_1225_TC_0005
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName           |
      | Deposit     | Checking    | Consumer     | Consumer 365 Checking |
    And Fills the Details for the Individual Information
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0006
  Scenario: REG_ONBRD_1225_TC_0006
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName                  |
      | Deposit     | Checking    | Consumer     | Consumer TAB Chrome Checking |
    And Fills the Details for the Individual Information
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0007
  Scenario: REG_ONBRD_1225_TC_0007
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName                  |
      | Deposit     | Checking    | Consumer     | Consumer High Yield Checking |
    And Fills the Details for the Individual Information
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0008
  Scenario: REG_ONBRD_1225_TC_0008
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName                  |
      | Deposit     | Checking    | Commercial   | Commercial Business Checking |
    And Fills the Details for the Legal Entity
      | LegalEntity     |
      | Sole Proprietor |
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete commercial Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0009
  Scenario: REG_ONBRD_1225_TC_0009
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName                           |
      | Deposit     | Checking    | Commercial   | Commercial Analyzed Business Checking |
    And Fills the Details for the Legal Entity
      | LegalEntity     |
      | Sole Proprietor |
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete commercial Verifications and Create account

  @ONBRD1225 @Smoke @Deposit @REG_ONBRD_1225_TC_0010
  Scenario: REG_ONBRD_1225_TC_0010
    Given User is Starting to create a Product
    When user creates a Deposit product with specfications and Clicks create
      | ProductLine | ProductType | CustomerType | ProductName                           |
      | Deposit     | Checking    | Commercial   | Commercial Business Advantage Prepaid |
    And Fills the Details for the Legal Entity
      | LegalEntity     |
      | Sole Proprietor |
    Then Product should be added in OnBoarding results Table
    And User should be able to Complete commercial Verifications and Create account

**************************************************************
Login login = new Login();

	ApplicationsHome home = new ApplicationsHome();

	ApplicationCreation app = new ApplicationCreation();

	DepositTasks depositTask = new DepositTasks();

	LoanTasks loanTask = new LoanTasks();

	ApplicationEditor appEditor = new ApplicationEditor();

	@Given("user logged into Onboarding")
	public void user_logged_into_Onboarding() {

		login = login.openOnboarding();
		home = login.loginToApplication();
	}

	@Given("User is Starting to create a Product")
	public void user_is_Starting_to_create_a_Product() {
		app = home.openApplications();
	}

	@Given("User is on Applications Page")
	public void user_is_on_Applications_Page() {
		app = home.openApplications();
	}

	@When("user creates a Deposit product with specfications and Clicks create")
	public void user_creates_a_Deposit_product_with_specfications_and_Clicks_create(DataTable dataTable) {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.createDepositProduct(data.get(0).get("ProductLine"), data.get(0).get("ProductType"),
				data.get(0).get("CustomerType"), data.get(0).get("ProductName"));
	}

	@When("user creates a Loan product with specifications and Clicks create")
	public void user_creates_a_Loan_product_with_specifications_and_Clicks_create(
			io.cucumber.datatable.DataTable dataTable) {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.createLoanProduct(data.get(0).get("ProductLine"), data.get(0).get("ProductType"),
				data.get(0).get("CustomerType"), data.get(0).get("ProductName"));
	}

	@When("Fills the Details for the Individual Information")
	public void fills_the_Details_for_the_Individual_Information() {
		app.fillIndividualBasicandDrivingInfo();
		app.fillPhysicalAddressDetails();
		app.selectMailingAddessSameAsPhysical();
		app.fillPhonesInfo();
		appEditor = app.startDepositProcess();
	}

	@When("Fills the Details for the Legal Entity")
	public void fills_the_Details_for_the_Legal_Entity(DataTable dataTable) {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.fillLegalEntityInfo(data.get(0).get("LegalEntity"));
		app.fillPhysicalAddressDetails();
		app.selectMailingAddessSameAsPhysical();
		app.fillPhonesInfo();
		appEditor = app.startDepositProcess();
	}

	@When("Fills the Details for the Loans Legal Entity")
	public void fills_the_Details_for_the_Loans_Legal_Entity(io.cucumber.datatable.DataTable dataTable)
			throws Exception {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.fillLegalEntityInfo(data.get(0).get("LegalEntity"));
		app.fillPhysicalAddressDetails();
		app.selectMailingAddessSameAsPhysical();
		app.fillPhonesInfo();
	}

	@Then("Product should be added in OnBoarding results Table")
	public void product_should_be_added_in_OnBoarding_results_Table() {
		appEditor.selectcreatedDepositApplication();
		depositTask = appEditor.openDepositProduct();
	}

	@Then("Entity details should be saved")
	public void entity_details_should_be_saved() {
		app.assertEntityInfoSaved();
	}

	@When("User fills opportunity ,collateral and Equipment Info and starts Process")
	public void user_fills_opportunity_collateral_and_Equipment_Info_and_starts_Process(
			io.cucumber.datatable.DataTable dataTable) {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.fillOpportunityInfo(data.get(0).get("BusinessType"), data.get(0).get("Amount"));
		app.fillEquipmentInfo();
		app.addLoanIndividualInfo();
		app.updateLoanIndividualGuarantor();
		appEditor = app.startLoanProcess();
	}

	@When("User fills opportunity ,collateral  and starts Process")
	public void user_fills_opportunity_collateral_and_starts_Process(io.cucumber.datatable.DataTable dataTable) {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.fillOpportunityInfo(data.get(0).get("BusinessType"), data.get(0).get("Amount"));
		app.addLoanIndividualInfo();
		app.updateLoanIndividualGuarantor();
		appEditor = app.startLoanProcess();
	}

	@Then("user should be able to Start the Process")
	public void user_should_be_able_to_Start_the_Process() {
		appEditor.selectcreatedLoanApplication();
		loanTask = appEditor.openLoanProduct();
	}

	@Then("User should be able to Complete Verifications and Create account")
	public void user_should_be_able_to_Complete_Verifications_and_Create_account() {
		depositTask.completeSingleConsumerDepositTasks();
		depositTask.verifyAccountCreated(OnBoardApplicants.Applicant1);
	}

	@Then("User should be able to Complete commercial Verifications and Create account")
	public void user_should_be_able_to_Complete_commercial_Verifications_and_Create_account() {
		depositTask.completeCommercialDepositTasks();
		depositTask.verifyCIFAccountCreated();
	}

	@Then("User should be able to Complete consumer COD Verifications and Create account")
	public void User_should_be_able_to_Complete_consumer_COD_Verifications_and_Create_account() {
		depositTask.completeApplicationVerificationTask();
		depositTask.completeCustomerVerificationQATask();
		depositTask.completeDecisionTask();
		depositTask.completeCIFAccountCreationTask();
		depositTask.completeSendWelcomeEmailTask();
		depositTask.completeFundingTask();
	}

	@Then("User should be able to Complete commercial COD Verifications and Create account")
	public void user_should_be_able_to_Complete_commercial_COD_Verifications_and_Create_account() {
		depositTask.completeApplicationVerificationTask();
		depositTask.completeCustomerVerificationQATask();
		depositTask.completeDecisionTask();
		depositTask.completeCIFAccountCreationTask();
		depositTask.completeSendWelcomeEmailTask();
		depositTask.completeFundingTask();
	}

	@Then("User should be able to Complete commercial Savings Verifications and Create account")
	public void user_should_be_able_to_Complete_commercial_Savings_Verifications_and_Create_account() {
		depositTask.completeApplicationVerificationTask();
		depositTask.completeCustomerVerificationQATask();
		depositTask.completeDecisionTask();
		depositTask.completeCIFAccountCreationTask();
		depositTask.completeSendWelcomeEmailTask();
		depositTask.completeFundingTask();
	}

	@Then("Complete the tasks generated for Small Ticket Loan")
	public void complete_the_tasks_generated_for_Small_Ticket_Loan() {
		loanTask.checkInLoanPackage();
		loanTask.completeCompileSmallTicketCreditSummary();
		loanTask.standardException();
		loanTask.smeCreditAnalystApproval();
		loanTask.sendApproveLetter();
		loanTask.equipmentCheckList();
		loanTask.smeFunding();
	}

	@When("user completes the task generated for Large Ticket Loan")
	public void user_completes_the_task_generated_for_Large_Ticket_Loan() {
		loanTask.checkInLoanPackage();
		loanTask.compileCreditSummary();
		loanTask.collateralValuation();
		loanTask.largeTicketscoringTask();
		loanTask.standardException();
		loanTask.equipmentCheckList();
		loanTask.approveTask();
		loanTask.sendApproveLetter();
		loanTask.smeFunding();
	}

	@When("Fills the Details for the Joint Applicant")
	public void fills_the_Details_for_the_Joint_Applicant() {
		app.fillIndividualBasicandDrivingInfo();
		app.fillPhysicalAddressDetails();
		app.selectMailingAddessSameAsPhysical();
		app.fillPhonesInfo();
		app.createApplicant();
		app.addSecondDepositJointHolder();
		appEditor = app.startDepositProcess();
	}

	@Then("User should be able to Complete Joint Applicant Verifications and Create account")
	public void user_should_be_able_to_Complete_Joint_Applicant_Verifications_and_Create_account() {
		depositTask.completeApplicationVerificationTask();
		depositTask.completeApproveVerificationTask(OnBoardApplicants.Applicant1);
		depositTask.completeApproveVerificationTask(OnBoardApplicants.Applicant2);
		depositTask.verifyAccountCreated(OnBoardApplicants.Applicant1);
		depositTask.verifyAccountCreated(OnBoardApplicants.Applicant2);
	}

	@When("Fills the Details for the Joint Legal Entity")
	public void fills_the_Details_for_the_Joint_Legal_Entity(io.cucumber.datatable.DataTable dataTable) {
		List<Map<String, String>> data = dataTable.asMaps(String.class, String.class);
		app.fillLegalEntityInfo(data.get(0).get("LegalEntity"));
		app.fillPhysicalAddressDetails();
		app.selectMailingAddessSameAsPhysical();
		app.fillPhonesInfo();
		app.addLegalEntity(data.get(1).get("LegalEntity"));
		app.secondLegalEntityInfo(data.get(1).get("LegalEntity"));
		appEditor = app.startDepositProcess();
	}

	@When("user completes the task generated for ABL Loan")
	public void user_completes_the_task_generated_for_ABL_Loan() {
		loanTask.checkInLoanPackage();
		loanTask.scoringTask();
		loanTask.backgroundSearchesUCCFilingsTaskTask();
		loanTask.DebtorCreditReviewTask();
		loanTask.assignUnderWriterTask();
		loanTask.compileCreditSummary();
		loanTask.TaxGuardReport8821();
		loanTask.legalsPrepration();
		loanTask.tmsDiscoveryAndSetup();
		loanTask.standardException();
		loanTask.approveTask();
		loanTask.legalDocsExecution();
		loanTask.loanAccountSetup();
		loanTask.prefundingLegalReview();
		loanTask.fundingTask();
	}
